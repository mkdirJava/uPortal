<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<entity-mappings version="1.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd">

    <named-query name="JpaEntry.getAll">
        <query><![CDATA[
            from JpaEntry entry
        ]]></query>
    </named-query>

    <!-- fetch an entry, but eager fetch the address and recipient info too -->
    <named-query name="JpaEntry.getFullById">
        <query><![CDATA[
            from JpaEntry entry
                join fetch entry.addressees
                join fetch entry.addressees addr
                join fetch addr.recipients recip
            where
                entry.id = :entryId
        ]]></query>
    </named-query>

    <named-query name="JpaEvent.getAllByEntryId">
        <query><![CDATA[
            from JpaEvent event
            where
                event.entry.id = :entryId
            order by event.timestamp
        ]]></query>
    </named-query>

    <named-query name="JpaEvent.getByEntryIdAndEventId">
        <query><![CDATA[
            from JpaEvent event
            where
                event.entry.id = :entryId and
                event.id = :eventId
            order by event.timestamp
        ]]></query>
    </named-query>
</entity-mappings>