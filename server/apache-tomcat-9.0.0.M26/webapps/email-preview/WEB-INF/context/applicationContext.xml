<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:component-scan base-package="org.jasig.portlet.emailpreview.service" />
    <context:annotation-config />

    <bean id="exceptionResolver" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver">
        <!-- 
         | Always declare an 'exceptionResolver' bean with a 'defaultErrorView' 
         | because, in addition to other uses, it protects the portlet from 
         | failing when a bad request (due to a bug or malicious user) doesn't 
         | match any declared @RequestMapping.  When this happens, the portlet 
         | throws an Exception and takes itself out of service until a portal 
         | restart.  THIS CONDITION AFFECTS ALL USERS!
         +-->
         <property name="exceptionMappings">
            <props>
              <!-- Exception thrown when an error is raised during initialization, such as when 
                   the encryption password is not set for password based encryptor  -->
              <prop key="org.jasig.portlet.emailpreview.security.StringEncryptionException">pswEncError</prop>
            </props>
        </property>
        <property name="defaultErrorView" value="error"/>
    </bean>
    
    <!-- Properties configuration -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          lazy-init="false">
        <property name="locations">
            <list>
                <value>classpath:configuration.properties</value>
            </list>
        </property>
    </bean>

    <util:list id="linkServices">
        <ref bean="simpleEmailLinkService"/>
    </util:list>

    <!-- 
     | View resolvers, look for a named view bean before going to JSP resolution
     +-->
    <bean class="org.springframework.web.servlet.view.XmlViewResolver"
            p:order="0" p:location="/WEB-INF/context/views.xml"/>

    <bean id="jspViewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver"
        p:order="10" p:cache="true"
        p:viewClass="org.springframework.web.servlet.view.JstlView"
        p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/messages" />
    </bean>

    <!-- 
     | This bean maps error codes to UI messages that will be shown to users.  
     | The keys are numeric HTTP codes (e.g. 401 for "not authorized"), and the 
     | values are used to pull UI strings from the messageSource bean.  This way 
     | all UI customization and internationalization can be managed in one place.
     |
     | In addition to numeric keys, provide also a 'default' key, which will be 
     | used for any error code that doesn't have it's own entry.  Lastly, the 
     | controller may also add a custom message by sending an HTTP 200 together 
     | with an 'errorMessage' property in the returned JSON.
     +-->
    <util:map id="jsErrorMessages">
        <entry key="401" value="ajax.errorMessage.401"/>
        <entry key="504" value="ajax.errorMessage.504"/>
        <entry key="900" value="ajax.errorMessage.900"/>
        <entry key="default" value="ajax.errorMessage.default"/>
    </util:map>

    <!--
     | This bean maps message codes to UI messages that will be shown to users.
     | The values are used to pull UI strings from the messageSource bean.  This way
     | all UI customization and internationalization can be managed in one place.
     -->
    <util:map id="jsMessages">
        <entry key="deleteSelectedMessages" value="preview.alert.deleteSelectedMessages"/>
        <entry key="deleteMessage" value="preview.alert.deleteMessage"/>
        <entry key="deleteNotAvailable" value="preview.alert.deleteNotAvailable"/>
        <entry key="deleteNotAvailableTitle" value="preview.alert.deleteNotAvailable.title"/>
        <entry key="noMessagesSelected" value="preview.alert.noMessagesSelected"/>
    </util:map>

    <util:list id="mobileDeviceRegexes">
         <value>.*iPhone.*</value>
         <value>.*iPad.*</value>
         <value>.*Android.*</value>
         <value>.*IEMobile.*</value>
         <value>.*Safari.*Pre.*</value>
         <value>.*Nokia.*AppleWebKit.*</value>
    </util:list>

    <!-- For the demo portlet only;  DO NOT USE WITH REAL EMAIL INTEGRATION -->
    <bean id="demoAuthenticationService" class="org.jasig.portlet.emailpreview.service.auth.DemoAuthenticationService"/>

    <bean id="cachedPasswordAuthenticationService" 
            class="org.jasig.portlet.emailpreview.service.auth.CachedPasswordAuthenticationService"/>

    <bean id="portletPreferencesCredentialsAuthenticationService"
            class="org.jasig.portlet.emailpreview.service.auth.pp.PortletPreferencesCredentialsAuthenticationService"/>

    <bean id="stringEncryptionService" class="org.jasig.portlet.emailpreview.security.JasyptPBEStringEncryptionServiceImpl">
        <property name="stringEncryptor">
            <bean class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
                 <property name="password" value="${encryption.salt}"/>
            </bean>
        </property>
    </bean>
</beans>

